#key=query
#non-member-ocr
query.selectByCategory=select card_no,card_name, provider,card_image_url,category, discount_rate from(select card_no,card_name, provider,card_image_url,category,discount_rate,ROW_NUMBER() OVER (PARTITION BY card_name ORDER BY discount_rate DESC) AS rn from cards join card_benefit using(card_no) where category in(?,?) ) as ranked where rn=1 order by discount_rate desc limit 5;
query.selectByCardNumber=select category,card_no, discount_rate  from card_benefit where card_no in(?,?,?,?,?);

#member-ocr-card-recommend
query.insertOcr=insert into receipt(user_no,ocr_result) values(?,?);
query.insertStatementItem=insert into receipt_item(receipt_id,user_no,consume_at,merchant,amount,category) values(?,?,?,?,?,?);
query.insertMonthlySummary=insert into monthly_summary(user_no,expense_year,expense_month,category,total_amount,updated_at) values(?,?,?,?,?,now());
query.insertMonthlyRec=insert into monthly_recommendations(expense_year,expense_month,match_score,recommended_at,card_no,user_no) values(?,?,?,now(),?,?);

query.selectRecentCategory=SELECT ms.category, SUM(ms.total_amount) AS total_sum FROM monthly_summary ms JOIN (SELECT DISTINCT expense_year, expense_month FROM monthly_summary WHERE user_no = ? ORDER BY expense_year DESC, expense_month DESC LIMIT 3) recent ON ms.expense_year = recent.expense_year AND ms.expense_month = recent.expense_month WHERE ms.user_no = ? GROUP BY ms.category ORDER BY total_sum DESC LIMIT 2;
query.selectMatchedCardList=select card_no,avg(match_score) from (select match_score,card_no,recent.expense_year,recent.expense_month from monthly_recommendations mr join (SELECT DISTINCT expense_year, expense_month FROM monthly_recommendations WHERE user_no = ? ORDER BY expense_year DESC, expense_month DESC LIMIT 3) recent ON mr.expense_year = recent.expense_year AND mr.expense_month = recent.expense_month where mr.user_no = ?) as a group by card_no order by avg(match_score) desc limit 3;
query.selectRecommendCardDetails=select card_no,card_name,card_image_url,category,discount_rate from cards join card_benefit using(card_no) where card_no in (?,?,?) and category in (?,?);

#my-card-register
query.selectByKeword=select card_no,card_name,provider ,card_image_url from cards where card_name like ? and card_no not in (select card_no from user_card where user_no=?);
query.insertMyCard=insert into user_card(card_no,user_no) values(?,?);
query.insertRequest=insert into ask(title,content) values(?,?);

#my-card-manage
query.selectMatchTrend=select card_name,concat(yr,'-',case when m<10 then concat(0,m) else m end) as date,round(match_r,1) m_rate from (select card_no, yr, m, sum(discount_rate*rate)/max(sum(discount_rate*rate)) over(partition by yr,m)*90 as match_r from (select card_no, category, discount_rate from card_benefit where card_no in(select card_no from user_card where user_no = ?)) as c join (select a.expense_year as yr,a.expense_month as m,b.category as cat,total_amount,total_amount/category_total as rate from (SELECT expense_year, expense_month, SUM(total_amount) AS category_total FROM monthly_summary where user_no=? GROUP BY expense_year, expense_month) a join monthly_summary b on a.expense_year=b.expense_year and a.expense_month=b.expense_month where user_no=?) d on c.category=d.cat group by card_no,yr,m) as e natural join cards;
query.selectMyCards=select card_no,card_name,card_image_url,concat(category,' ',round(discount_rate,1)) from(select *,row_number() over(partition by card_no order by discount_rate desc) as rk from cards natural join card_benefit where card_no in (select card_no from user_card where user_no=?)) as a where rk<=3;
query.deleteMyCard=delete from user_card where user_no=? and card_no=?;

#main
query.selectCardList=select card_no,card_name,provider,card_image_url from cards order by view desc limit 6;
query.selectMyCardList=select distinctrow card_no,card_name,provider,card_image_url,count(card_no) over(partition by card_no) as cnt from cards natural join user_card order by cnt desc limit 6;
query.selectPopularList=select rn,card_name, card_image_url,category from(select row_number() over(partition by(category) order by view desc) as rn ,card_name, card_image_url,category from cards natural join card_benefit where category in('\uBB38\uD654/\uC5EC\uAC00','\uC1FC\uD551','\uD1B5\uC2E0/\uB514\uC9C0\uD138','\uC678\uC2DD')) as a where rn <=4;

#community
query.selectAllReview=select r.review_no, r.review_title, r.review_content, r.rating, r.input_date, c.card_name, c.card_image_url, u.user_id, r.views from review r join cards c using (card_no) join users u using (user_no) order by r.input_date desc limit ?, ?;
query.selectReviewCount=select count(*) from review;
query.selectDetailByReviewNo=SELECT r.review_no, r.review_title, r.review_content, r.rating, r.input_date, c.card_name, c.card_image_url, u.user_id, r.views FROM review r JOIN cards c USING (card_no) JOIN users u USING (user_no) WHERE review_no = ?;
query.selectAllReply=select r.reply_no, r.reply_content, r.input_date, r.review_no, u.user_id from reply r join users u using (user_no) where review_no = ? order by input_date desc;
query.selectReplyCount=select count(*) from reply where review_no = ?;
query.selectAllReviewByKeyword=SELECT r.review_no, r.review_title, r.review_content, r.rating, r.input_date, c.card_name, c.card_image_url, u.user_id, r.views FROM review r JOIN cards c USING (card_no) JOIN users u USING (user_no) WHERE (r.review_title LIKE ? OR r.review_content LIKE ? OR u.user_id LIKE ?) ORDER BY r.input_date DESC LIMIT ?, ?;
query.selectReviewCountByKeyword=SELECT COUNT(*) FROM review r JOIN users u USING (user_no) WHERE (r.review_title LIKE ? OR r.review_content LIKE ? OR u.user_id LIKE ?);
query.updateReview=update review set review_title=?, review_content=? where review_no = ?;
query.updateViews=update review set views = views + 1 where review_no = ?;
query.deleteReview=delete from review where review_no = ?;
query.selectUserCards=SELECT c.card_no, c.card_name FROM users u JOIN user_card uc using(user_no) JOIN cards c using(card_no) WHERE u.user_no = ?;
query.insertReview=insert into review(review_title, review_content, rating, card_no, user_no) values(?, ?, ?, ?, ?);
query.insertReply=INSERT INTO reply (reply_content, review_no, user_no) VALUES (?, ?, ?);
query.deleteReply=delete from reply where reply_no = ?;

#cart
query.selectAllCards=SELECT card_no, card_name, provider, card_image_url FROM cards ORDER BY view DESC;
query.selectByProvider=SELECT card_no, card_name, provider, card_image_url FROM cards WHERE provider = ? ORDER BY view DESC;
query.selectByKeyword=SELECT card_no, card_name, provider, card_image_url FROM cards WHERE card_name LIKE ? ORDER BY view DESC;
query.selectByCardNo=SELECT c.card_no, c.card_name, c.provider, c.fee, c.card_image_url, b.benefit_no, b.category, b.description, b.card_no AS b_card_no, b.discount_rate FROM cards c JOIN card_benefit b USING (card_no) WHERE c.card_no = ?;

