#key=query
query.selectByCategory=select card_no,card_name, provider,card_image_url,category, discount_rate from(select card_no,card_name, provider,card_image_url,category,discount_rate,ROW_NUMBER() OVER (PARTITION BY card_name ORDER BY discount_rate DESC) AS rn from cards join card_benefit using(card_no) where category in(?,?) ) as ranked where rn=1 order by discount_rate desc limit 5;
query.selectByCardNo=select category,card_no, discount_rate  from card_benefit where card_no in(?,?,?,?,?);

query.insertOcr=insert into receipt(user_no,ocr_result) values(?,?);
query.insertStatementItem=insert into receipt_item(receipt_id,user_no,consume_at,merchant,amount,category) values(?,?,?,?,?,?);
query.insertMonthlySummary=insert into monthly_summary(user_no,expense_year,expense_month,category,total_amount,updated_at) values(?,?,?,?,?,now());
query.insertMonthlyRec=insert into monthly_recommendations(expense_year,expense_month,match_score,recommended_at,card_no,user_no) values(?,?,?,now(),?,?);

#community
query.selectAllReview=select r.review_no, r.review_title, r.review_content, r.rating, r.input_date, c.card_name, c.card_image_url, u.user_id, r.views from review r join cards c using (card_no) join users u using (user_no) order by r.input_date desc limit ?, ?;
query.selectReviewCount=select count(*) from review;
query.selectDetailByReviewNo=SELECT r.review_no, r.review_title, r.review_content, r.rating, r.input_date, c.card_name, c.card_image_url, u.user_id, r.views FROM review r JOIN cards c USING (card_no) JOIN users u USING (user_no) WHERE review_no = ?;
query.selectAllReply=select r.reply_no, r.reply_content, r.input_date, r.review_no, u.user_id from reply r join users u using (user_no) where review_no = ? order by input_date desc;
query.selectReplyCount=select count(*) from reply where review_no = ?;
query.selectAllReviewByKeyword=SELECT r.review_no, r.review_title, r.review_content, r.rating, r.input_date, c.card_name, c.card_image_url, u.user_id, r.views FROM review r JOIN cards c USING (card_no) JOIN users u USING (user_no) WHERE (r.review_title LIKE ? OR r.review_content LIKE ? OR u.user_id LIKE ?) ORDER BY r.input_date DESC LIMIT ?, ?;
query.selectReviewCountByKeyword=SELECT COUNT(*) FROM review r JOIN users u USING (user_no) WHERE (r.review_title LIKE ? OR r.review_content LIKE ? OR u.user_id LIKE ?);
query.updateReview=update review set review_title=?, review_content=? where review_no = ?;
query.updateViews=update review set views = views + 1 where review_no = ?;
query.deleteReview=delete from review where review_no = ?;
query.selectUserCards=SELECT c.card_no, c.card_name FROM users u JOIN user_card uc using(user_no) JOIN cards c using(card_no) WHERE u.user_no = ?;
query.insertReview=insert into review(review_title, review_content, rating, card_no, user_no) values(?, ?, ?, ?, ?);
query.insertReply=INSERT INTO reply (reply_content, review_no, user_no) VALUES (?, ?, ?);
query.deleteReply=delete from reply where reply_no = ?;

#cart
query.selectAllCards=SELECT card_no, card_name, provider, card_image_url FROM cards ORDER BY view DESC;
query.selectByProvider=SELECT card_no, card_name, provider, card_image_url FROM cards WHERE provider = ? ORDER BY view DESC;
query.selectByKeyword=SELECT card_no, card_name, provider, card_image_url FROM cards WHERE card_name LIKE ? ORDER BY view DESC;
query.selectByCardNo=SELECT c.card_no, c.card_name, c.provider, c.fee, c.card_image_url, b.benefit_no, b.category, b.description, b.card_no AS b_card_no, b.discount_rate FROM cards c JOIN card_benefit b USING (card_no) WHERE c.card_no = ?;
query.selectByProviderAndKeyword=SELECT card_no, card_name, provider, card_image_url FROM cards WHERE provider = ? AND card_name LIKE ? ORDER BY view DESC;